(async function automateASKPortal() {
    // Utility: wait
    function delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    // Utility: random word
    function randomText(length = 6) {
        const chars = "abcdefghijklmnopqrstuvwxyz";
        return Array.from({ length }, () => chars[Math.floor(Math.random() * chars.length)]).join("");
    }

    // Utility: check visible
    function isVisible(el) {
        if (!el) return false;
        const rect = el.getBoundingClientRect();
        return rect.width > 0 && rect.height > 0;
    }

    // Utility: wait for element
    async function waitFor(selectorOrFn, desc = "element") {
        let el;
        for (let i = 0; i < 50; i++) {
            el = typeof selectorOrFn === "string" ? document.querySelector(selectorOrFn) : selectorOrFn();
            if (el && isVisible(el)) return el;
            await delay(500);
        }
        throw new Error("Timeout: " + desc);
    }

    // Utility: safe click
    function clickEl(el) {
        if (!el) return;
        el.dispatchEvent(new MouseEvent("mouseover", { bubbles: true }));
        el.dispatchEvent(new MouseEvent("mousedown", { bubbles: true }));
        el.dispatchEvent(new MouseEvent("mouseup", { bubbles: true }));
        el.click();
    }

    // Find 3-line filter button beside search
    function findFilterButtonNear(input) {
        if (!input) return null;
        const container = input.closest("form, .search, .search-bar, .input-group, header, .top") || document;
        const candidates = Array.from(container.querySelectorAll("button, [role='button'], div"))
            .filter(isVisible)
            .filter(el => el.querySelector("svg"));
        if (candidates.length) {
            candidates.sort((a, b) => a.getBoundingClientRect().left - b.getBoundingClientRect().left);
            return candidates[0];
        }
        return Array.from(document.querySelectorAll("button, [role='button']"))
            .find(el => /menu|filter|‚ò∞/i.test((el.innerText||"") + (el.title||"") + (el.getAttribute("aria-label")||"")));
    }

    // --- Main Loop ---
    while (true) {
        try {
            console.log("üîé Starting new cycle...");

            // 1. Wait for search box
            const searchInput = await waitFor(() => document.querySelector("input"), "search input");
            searchInput.value = randomText();
            searchInput.dispatchEvent(new Event("input", { bubbles: true }));
            console.log("‚úçÔ∏è Typed random text");
            await delay(7000);

            // 2. Click 3-line filter button
            const filterBtn = await waitFor(() => findFilterButtonNear(searchInput), "3-line filter button");
            clickEl(filterBtn);
            console.log("‚ò∞ Clicked 3-line button");
            await delay(7000);

            // 3. Select location = India
            const locationDropdown = await waitFor("select", "location dropdown");
            locationDropdown.value = "India";
            locationDropdown.dispatchEvent(new Event("change", { bubbles: true }));
            console.log("üåç Selected India");
            await delay(7000);

            // 4. Click Search button
            let searchBtn = document.querySelector("button[type='submit']") 
                         || document.querySelector("button svg")?.closest("button");
            if (searchBtn) {
                clickEl(searchBtn);
                console.log("üîç Clicked search");
            }
            await delay(7000);

            // 5. Click first result
            const firstResult = await waitFor(() => document.querySelector("a, .result-item, h3"), "first search result");
            clickEl(firstResult);
            console.log("üìÑ Clicked first search result");
            await delay(7000);

            // 6. Click ASK logo (top-left)
            const askLogo = await waitFor(() =>
                [...document.querySelectorAll("a, img, span, div")]
                    .find(el => /ask/i.test(el.innerText || "") || el.getAttribute("alt") === "ASK"),
                "ASK logo"
            );
            clickEl(askLogo);
            console.log("üè† Clicked ASK logo (home)");
            await delay(7000);

        } catch (err) {
            console.error("‚ùå Error:", err);
            await delay(7000);
        }
    }
})();
